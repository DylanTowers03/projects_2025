version: '3.8'

services:
   # Servicio para la base de datos MongoDB
  mongo:
    image: mongo:latest  # Usa la última imagen de MongoDB
    container_name: mongo
    env_file:
      - ./.env  # Indica la ubicación del archivo .env
    
    # Variables de entorno para MongoDB
    environment:
      MONGO_INITDB_DATABASE: $DB_NAME
    ports:
      - $MONGO_LOCAL_PORT:$MONGO_DOCKER_PORT  # Mapea el puerto 27017 del contenedor al puerto 27017 en la máquina
    volumes:
      - ./data/db:/data/db  # Persistir los datos de MongoDB en la máquina local
    networks:
      - mongo-jwt-network  # Conectar a la red personalizada

  # Servicio para la aplicación Node.js
  app:
    build: 
      context: .
      dockerfile: dockerfile
    container_name: nodejs-app
    env_file:
      - ./.env  # Indica la ubicación del archivo .env
    ports:
      - $PORT:3000  # Mapea el puerto 3000 del contenedor al puerto 3000 en la máquina
    depends_on:
      - mongo  # Asegura que MongoDB se inicie antes que la aplicación Node.js
    command: ["sh", "-c", "npm install && npm start"]  # Instalar dependencias y luego arrancar la app

  # Opcional: Servicio para un cliente MongoDB (si deseas tener un cliente gráfico como Mongo Express)
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8081:8081"  # Mapea el puerto 8081 para acceder a Mongo Express
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo  # Se conecta al contenedor MongoDB
      - ME_CONFIG_MONGODB_PORT=$MONGO_DOCKER_PORT  # Puerto de MongoDB
      - ME_CONFIG_MONGODB_DATABASE= $DB_NAME  # Base de datos de MongoDB
    networks:
      - mongo-jwt-network  # Conectar a la red personalizada
    depends_on:
      - mongo
networks:
  mongo-jwt-network:
    driver: bridge  # Red predeterminada para servicios de Docker